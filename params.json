{"name":"React-infinite-carousel","tagline":"infinite carousel with progress control build with React.","body":"# react-infinite-carousel\r\nInfinite carousel with progress control built with React.\r\n\r\nThe user has the ability to control the items rendering and background rendering at any stage.\r\nThe component gets \"itemRenderer\" function that gets index and progress as input and should return a React component.\r\nThe progress is a number between 0 to 1 which reflects the position of the item on the screen.\r\nThis enables the user to render according to position on screen, for example change opacity brightness scaling...\r\n\r\n## Quick Start\r\n```\r\nvar content = document.getElementById('content'),\r\n    backgroundRenderer = function(index){\r\n      return <img src={\"backgroundImage.jpg\"} width: '100%', height: '100%'/>\r\n    },\r\n    itemRenderer = function(index, progress){\r\n      return <div>{\"Item number \" + index} </div>\r\n    };\r\n    \r\nReact.render(<Carousel\r\n    backgroundRenderer={backgroundRenderer}\r\n    itemRenderer={itemRenderer}\r\n    itemsCount={10}\r\n/>, content);\r\n\r\n```\r\n## Installation\r\nreact-infinite-carousel uses a Universal Module Definition so you can use it with both CommonJS and RequireJS.\r\n\r\n### CommonJS\r\n```\r\nrequire('react-infinite-carousel')\r\n```\r\n\r\n### RequireJS\r\n```\r\ndefine(['[path to project]/dist/Carousel.js'], function(carousel){\r\n  //your code goes here\r\n});\r\n```\r\n\r\n### In the Browser\r\nIf you need it as a standalone script that is referenced from your html file then just include dist/Carousel.js and you have it on the global scope. \r\n\r\n### bower\r\nbower install react-infinite-carousel\r\n\r\n#Building the examples\r\n```bash\r\n    cd examples\r\n    webpack\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}